name: 'cdk8s-k3d'
# Build and deploy on k3d with cdk8s.io by using python script

on:
  pull_request:
  push:

jobs:
  cdk8s-k3d:
    name: CDK8s with k3d
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.1.0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          pip3 install --user pipenv
          pip3 install flake8 pytest
          if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
          PYTHON_BIN_PATH="$(python3 -m site --user-base)/bin"
          export PATH="$PATH:$PYTHON_BIN_PATH"

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - uses: AbsaOSS/k3d-action@v1.5.0
        id: k3d-cluster
        with:
          cluster-name: "test"
          args: >-
            --agents 1
            --config=k3d.yaml

      - name: Cluster info
        run: |
          echo k3d-cluster: ${{ steps.k3d-cluster.outputs.network }} ${{ steps.k3d-cluster.outputs.subnet-CIDR }}
          echo
          kubectl cluster-info

      - name: Install CDK8s-cli
        run: npm install -g cdk8s-cli

      - name: CDK8s import
        run: |
          pipenv install
          cdk8s import --language python

      - name: CDK8s synthesize into a k8s template
        run: |
          cdk8s synth

      - name: Apply generated k8s template
        run: |
          kubectl apply -f ./dist/hello.k8s.yaml

      - name: Get svc and pods
        run: |
          kubectl get services,pods -o wide
